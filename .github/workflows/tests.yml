name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    env:
      PROJECT_ID: gmail-ai-autolabel
      REGION: us-central1
      ENDPOINT_ID: 3233752757731065856
      GOOGLE_CLOUD_PROJECT: gmail-ai-autolabel
      VERTEX_AI_ENDPOINT: projects/gmail-ai-autolabel/locations/us-central1/endpoints/3233752757731065856
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
        create_credentials_file: true
        export_environment_variables: true
        cleanup_credentials: true
        service_account: 'github-actions@gmail-ai-autolabel.iam.gserviceaccount.com'
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}
        install_components: 'beta'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/test.txt
        pip install -e .
    
    - name: Initialize Vertex AI
      run: |
        # Write credentials to a file that Vertex AI can read
        echo '${{ secrets.GOOGLE_CREDENTIALS }}' > vertex_credentials.json
        # Set environment variables
        export GOOGLE_APPLICATION_CREDENTIALS="$PWD/vertex_credentials.json"
        export GOOGLE_CLOUD_PROJECT="${{ env.PROJECT_ID }}"
        # Verify credentials and activate service account
        python -c "
        import json
        import os
        from google.cloud import aiplatform
        
        # Read and parse credentials
        with open('vertex_credentials.json', 'r') as f:
            creds = json.load(f)
            
        aiplatform.init(
            project='${{ env.PROJECT_ID }}',
            location='${{ env.REGION }}',
            credentials_dict=creds
        )
        "
        
    - name: Run tests
      env:
        GOOGLE_APPLICATION_CREDENTIALS: vertex_credentials.json
        GCLOUD_PROJECT: ${{ env.PROJECT_ID }}
        GOOGLE_CLOUD_PROJECT: ${{ env.PROJECT_ID }}
      run: |
        pytest tests/ --cov=src --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: ${{ github.repository }}
        
    - name: Cleanup
      if: always()
      run: |
        rm -f vertex_credentials.json 