# email_tags.yaml
# Defines the structure for tagging incoming emails related to fertilizer regulations.

email_tags:
  required:
    state_code: string # Two-letter state code (e.g., "CA", "NY")
    company_code: string # Three letter company code (e.g., "ARB", "BIN")
    action_type: string # Reference to regulatory_actions (e.g., "registration")

  optional:
    urgency: string # High, Medium, Low
    response_needed: boolean # True/False
    deadline: string # ISO 8601 date (YYYY-MM-DD)
    product_type: string # Reference to product_categories (e.g., "fertilizer.commercial")
    notes: string # Any additional notes

  # Contextual rules for automatically classifying emails.
  # These rules are evaluated *after* basic keyword matching.
  context_rules:
    - rule: "tonnage_if_contains_dates_and_quantities"
      condition: "has_reporting_period(email_text) && has_quantity_data(email_text)"
      action_type: "tonnage"  # Set the action_type
      confidence: 0.9
    - rule: "renewal_if_contains_registration_number"
      condition: "has_registration_number(email_text) && mentions_renewal(email_text)"
      action_type: "renewal"
      confidence: 0.8
    - rule: "product_type_override_organic"  # Example
      condition: "contains_word(email_text, 'organic') && contains_word(email_text, 'fertilizer')"
      product_type: "fertilizer.organic"  # Override to a more specific category
      confidence: 0.95

# Helper functions (pseudo-code - implementation depends on the system)
# These would be defined in the Python code, NOT in the YAML.
# They are included here for illustrative purposes.

# function has_reporting_period(email_content):
#   return (regex_match(email_content, date_range_pattern) || regex_match(email_content, month_year_pattern))

# function has_quantity_data(email_content):
#  return regex_match(email_content, quantity_pattern) # e.g., "100 tons", "500 lbs"

# function has_registration_number(email_content):
#   return regex_match(email_content, registration_number_pattern)

# function mentions_renewal(email_content):
#  return regex_match(email_content, renewal_keywords)

# function contains_word(email_content, word):
#     return regex_match(email_content, "\\b" + word + "\\b")